services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        WWWGROUP: '${WWWGROUP:-1000}'
    container_name: 'blog-filament-app'
    restart: unless-stopped
    environment:
      CONTAINER_ROLE: app
      WWWUSER: '${WWWUSER:-1000}'
    volumes:
      - './storage:/var/www/storage'
      - './bootstrap/cache:/var/www/bootstrap/cache'
      - './public/storage:/var/www/public/storage'
    networks:
      - filament-network
    depends_on:
      - redis

  nginx:
    image: nginx:alpine
    container_name: 'blog-filament-nginx'
    restart: unless-stopped
    ports:
      - '8000:80'
    volumes:
      - './public:/var/www/public:ro'
      - './docker/nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro'
    networks:
      - filament-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: 'redis:alpine'
    container_name: 'blog-filament-redis'
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-null}
    volumes:
      - 'redis_data:/data'
    networks:
      - filament-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Worker para filas (se necess√°rio)
  queue:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: 'blog-filament-queue'
    restart: unless-stopped
    environment:
      CONTAINER_ROLE: queue
    volumes:
      - './storage:/var/www/storage'
    networks:
      - filament-network
    depends_on:
      - redis
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600

  # Scheduler para cron jobs
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: 'blog-filament-scheduler'
    restart: unless-stopped
    environment:
      CONTAINER_ROLE: scheduler
    volumes:
      - './storage:/var/www/storage'
    networks:
      - filament-network
    depends_on:
      - redis
    command: |
      sh -c 'while true; do
        php artisan schedule:run
        sleep 60
      done'

volumes:
  redis_data:
    driver: local

networks:
  filament-network:
    driver: bridge 